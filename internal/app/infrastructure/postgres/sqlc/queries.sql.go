// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: queries.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createProduct = `-- name: CreateProduct :one
INSERT INTO products (
    id, name, description, category, price, status, tags, created_at, updated_at, deleted_at
) VALUES (
    gen_random_uuid(), $1, $2, $3, $4, $5, $6, NOW(), NOW(), NOW()
)
RETURNING id, name, description, category, price, status, tags, created_at, updated_at, deleted_at
`

type CreateProductParams struct {
	Name        string      `json:"name"`
	Description pgtype.Text `json:"description"`
	Category    pgtype.Text `json:"category"`
	Price       int64       `json:"price"`
	Status      pgtype.Text `json:"status"`
	Tags        []string    `json:"tags"`
}

func (q *Queries) CreateProduct(ctx context.Context, arg CreateProductParams) (Product, error) {
	row := q.db.QueryRow(ctx, createProduct,
		arg.Name,
		arg.Description,
		arg.Category,
		arg.Price,
		arg.Status,
		arg.Tags,
	)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Description,
		&i.Category,
		&i.Price,
		&i.Status,
		&i.Tags,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
	)
	return i, err
}
